// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zima/proto/operation_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zima/proto/operation_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ZimaProto {
namespace OperationData {
class PStepPointDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PStepPoint>
     _instance;
} _PStepPoint_default_instance_;
class POperationDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<POperationData>
     _instance;
} _POperationData_default_instance_;
class PCleaningRecordSummaryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PCleaningRecordSummary>
     _instance;
} _PCleaningRecordSummary_default_instance_;
class PCleaningRecordSummaryListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PCleaningRecordSummaryList>
     _instance;
} _PCleaningRecordSummaryList_default_instance_;

namespace protobuf_zima_2fproto_2foperation_5fdata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PStepPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PStepPoint, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PStepPoint, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POperationData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POperationData, nav_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POperationData, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POperationData, step_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POperationData, start_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POperationData, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POperationData, operation_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POperationData, operation_result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCleaningRecordSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCleaningRecordSummary, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCleaningRecordSummary, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCleaningRecordSummary, area_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCleaningRecordSummary, operation_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCleaningRecordSummary, operation_result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCleaningRecordSummaryList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCleaningRecordSummaryList, record_summary_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(PStepPoint)},
  { 7, -1, sizeof(POperationData)},
  { 19, -1, sizeof(PCleaningRecordSummary)},
  { 29, -1, sizeof(PCleaningRecordSummaryList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PStepPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_POperationData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PCleaningRecordSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PCleaningRecordSummaryList_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "zima/proto/operation_data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::ZimaProto::Map::protobuf_zima_2fproto_2fmap_2eproto::InitDefaults();
  ::ZimaProto::NavData::protobuf_zima_2fproto_2fnav_5fdata_2eproto::InitDefaults();
  _PStepPoint_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PStepPoint_default_instance_);_POperationData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_POperationData_default_instance_);_PCleaningRecordSummary_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PCleaningRecordSummary_default_instance_);_PCleaningRecordSummaryList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PCleaningRecordSummaryList_default_instance_);_PStepPoint_default_instance_._instance.get_mutable()->point_ = const_cast< ::ZimaProto::Map::PMapPoint*>(
      ::ZimaProto::Map::PMapPoint::internal_default_instance());
  _POperationData_default_instance_._instance.get_mutable()->nav_data_ = const_cast< ::ZimaProto::NavData::PNavData*>(
      ::ZimaProto::NavData::PNavData::internal_default_instance());
  _POperationData_default_instance_._instance.get_mutable()->start_point_ = const_cast< ::ZimaProto::Map::PMapPoint*>(
      ::ZimaProto::Map::PMapPoint::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\037zima/proto/operation_data.proto\022\027ZimaP"
      "roto.OperationData\032\024zima/proto/map.proto"
      "\032\031zima/proto/nav_data.proto\"l\n\nPStepPoin"
      "t\022\'\n\005point\030\001 \001(\0132\030.ZimaProto.Map.PMapPoi"
      "nt\0225\n\004type\030\002 \001(\0162\'.ZimaProto.OperationDa"
      "ta.PStepPointType\"\324\002\n\016POperationData\022-\n\010"
      "nav_data\030\001 \001(\0132\033.ZimaProto.NavData.PNavD"
      "ata\022\022\n\nstart_time\030\002 \001(\001\0228\n\013step_points\030\003"
      " \003(\0132#.ZimaProto.OperationData.PStepPoin"
      "t\022-\n\013start_point\030\004 \001(\0132\030.ZimaProto.Map.P"
      "MapPoint\022\020\n\010duration\030\005 \001(\001\022\?\n\016operation_"
      "type\030\006 \001(\0162\'.ZimaProto.OperationData.POp"
      "erationType\022C\n\020operation_result\030\007 \001(\0162)."
      "ZimaProto.OperationData.POperationResult"
      "\"\327\001\n\026PCleaningRecordSummary\022\022\n\nstart_tim"
      "e\030\001 \001(\r\022\020\n\010duration\030\002 \001(\r\022\021\n\tarea_size\030\003"
      " \001(\001\022\?\n\016operation_type\030\004 \001(\0162\'.ZimaProto"
      ".OperationData.POperationType\022C\n\020operati"
      "on_result\030\005 \001(\0162).ZimaProto.OperationDat"
      "a.POperationResult\"j\n\032PCleaningRecordSum"
      "maryList\022L\n\023record_summary_list\030\001 \003(\0132/."
      "ZimaProto.OperationData.PCleaningRecordS"
      "ummary*\177\n\016POperationType\022\r\n\tkNullType\020\000\022"
      "\025\n\021kAllHouseCleaning\020\001\022\027\n\023kSelectRoomCle"
      "aning\020\002\022\027\n\023kSelectAreaCleaning\020\003\022\025\n\021kAll"
      "HouseScanning\020\004*d\n\020POperationResult\022\017\n\013k"
      "NullResult\020\000\022\014\n\010kStopped\020\001\022\027\n\023kFinishAut"
      "oCleaning\020\002\022\030\n\024kFinishAutoScanHouse\020\003*1\n"
      "\016PStepPointType\022\017\n\013kNormalStep\020\000\022\016\n\nkPau"
      "seStep\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1176);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zima/proto/operation_data.proto", &protobuf_RegisterTypes);
  ::ZimaProto::Map::protobuf_zima_2fproto_2fmap_2eproto::AddDescriptors();
  ::ZimaProto::NavData::protobuf_zima_2fproto_2fnav_5fdata_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_zima_2fproto_2foperation_5fdata_2eproto

const ::google::protobuf::EnumDescriptor* POperationType_descriptor() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_enum_descriptors[0];
}
bool POperationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* POperationResult_descriptor() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_enum_descriptors[1];
}
bool POperationResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PStepPointType_descriptor() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_enum_descriptors[2];
}
bool PStepPointType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PStepPoint::kPointFieldNumber;
const int PStepPoint::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PStepPoint::PStepPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zima_2fproto_2foperation_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZimaProto.OperationData.PStepPoint)
}
PStepPoint::PStepPoint(const PStepPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_point()) {
    point_ = new ::ZimaProto::Map::PMapPoint(*from.point_);
  } else {
    point_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ZimaProto.OperationData.PStepPoint)
}

void PStepPoint::SharedCtor() {
  ::memset(&point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&point_)) + sizeof(type_));
  _cached_size_ = 0;
}

PStepPoint::~PStepPoint() {
  // @@protoc_insertion_point(destructor:ZimaProto.OperationData.PStepPoint)
  SharedDtor();
}

void PStepPoint::SharedDtor() {
  if (this != internal_default_instance()) delete point_;
}

void PStepPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PStepPoint::descriptor() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PStepPoint& PStepPoint::default_instance() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

PStepPoint* PStepPoint::New(::google::protobuf::Arena* arena) const {
  PStepPoint* n = new PStepPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PStepPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:ZimaProto.OperationData.PStepPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && point_ != NULL) {
    delete point_;
  }
  point_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool PStepPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZimaProto.OperationData.PStepPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ZimaProto.Map.PMapPoint point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ZimaProto.OperationData.PStepPointType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ZimaProto::OperationData::PStepPointType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZimaProto.OperationData.PStepPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZimaProto.OperationData.PStepPoint)
  return false;
#undef DO_
}

void PStepPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZimaProto.OperationData.PStepPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ZimaProto.Map.PMapPoint point = 1;
  if (this->has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->point_, output);
  }

  // .ZimaProto.OperationData.PStepPointType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ZimaProto.OperationData.PStepPoint)
}

::google::protobuf::uint8* PStepPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ZimaProto.OperationData.PStepPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ZimaProto.Map.PMapPoint point = 1;
  if (this->has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->point_, deterministic, target);
  }

  // .ZimaProto.OperationData.PStepPointType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZimaProto.OperationData.PStepPoint)
  return target;
}

size_t PStepPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZimaProto.OperationData.PStepPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ZimaProto.Map.PMapPoint point = 1;
  if (this->has_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->point_);
  }

  // .ZimaProto.OperationData.PStepPointType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PStepPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZimaProto.OperationData.PStepPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const PStepPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PStepPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZimaProto.OperationData.PStepPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZimaProto.OperationData.PStepPoint)
    MergeFrom(*source);
  }
}

void PStepPoint::MergeFrom(const PStepPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZimaProto.OperationData.PStepPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_point()) {
    mutable_point()->::ZimaProto::Map::PMapPoint::MergeFrom(from.point());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void PStepPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZimaProto.OperationData.PStepPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PStepPoint::CopyFrom(const PStepPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZimaProto.OperationData.PStepPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PStepPoint::IsInitialized() const {
  return true;
}

void PStepPoint::Swap(PStepPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PStepPoint::InternalSwap(PStepPoint* other) {
  using std::swap;
  swap(point_, other->point_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PStepPoint::GetMetadata() const {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PStepPoint

// .ZimaProto.Map.PMapPoint point = 1;
bool PStepPoint::has_point() const {
  return this != internal_default_instance() && point_ != NULL;
}
void PStepPoint::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}
const ::ZimaProto::Map::PMapPoint& PStepPoint::point() const {
  const ::ZimaProto::Map::PMapPoint* p = point_;
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.PStepPoint.point)
  return p != NULL ? *p : *reinterpret_cast<const ::ZimaProto::Map::PMapPoint*>(
      &::ZimaProto::Map::_PMapPoint_default_instance_);
}
::ZimaProto::Map::PMapPoint* PStepPoint::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::ZimaProto::Map::PMapPoint;
  }
  // @@protoc_insertion_point(field_mutable:ZimaProto.OperationData.PStepPoint.point)
  return point_;
}
::ZimaProto::Map::PMapPoint* PStepPoint::release_point() {
  // @@protoc_insertion_point(field_release:ZimaProto.OperationData.PStepPoint.point)
  
  ::ZimaProto::Map::PMapPoint* temp = point_;
  point_ = NULL;
  return temp;
}
void PStepPoint::set_allocated_point(::ZimaProto::Map::PMapPoint* point) {
  delete point_;
  point_ = point;
  if (point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ZimaProto.OperationData.PStepPoint.point)
}

// .ZimaProto.OperationData.PStepPointType type = 2;
void PStepPoint::clear_type() {
  type_ = 0;
}
::ZimaProto::OperationData::PStepPointType PStepPoint::type() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.PStepPoint.type)
  return static_cast< ::ZimaProto::OperationData::PStepPointType >(type_);
}
void PStepPoint::set_type(::ZimaProto::OperationData::PStepPointType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.PStepPoint.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int POperationData::kNavDataFieldNumber;
const int POperationData::kStartTimeFieldNumber;
const int POperationData::kStepPointsFieldNumber;
const int POperationData::kStartPointFieldNumber;
const int POperationData::kDurationFieldNumber;
const int POperationData::kOperationTypeFieldNumber;
const int POperationData::kOperationResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

POperationData::POperationData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zima_2fproto_2foperation_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZimaProto.OperationData.POperationData)
}
POperationData::POperationData(const POperationData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      step_points_(from.step_points_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_nav_data()) {
    nav_data_ = new ::ZimaProto::NavData::PNavData(*from.nav_data_);
  } else {
    nav_data_ = NULL;
  }
  if (from.has_start_point()) {
    start_point_ = new ::ZimaProto::Map::PMapPoint(*from.start_point_);
  } else {
    start_point_ = NULL;
  }
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&operation_result_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(operation_result_));
  // @@protoc_insertion_point(copy_constructor:ZimaProto.OperationData.POperationData)
}

void POperationData::SharedCtor() {
  ::memset(&nav_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_result_) -
      reinterpret_cast<char*>(&nav_data_)) + sizeof(operation_result_));
  _cached_size_ = 0;
}

POperationData::~POperationData() {
  // @@protoc_insertion_point(destructor:ZimaProto.OperationData.POperationData)
  SharedDtor();
}

void POperationData::SharedDtor() {
  if (this != internal_default_instance()) delete nav_data_;
  if (this != internal_default_instance()) delete start_point_;
}

void POperationData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POperationData::descriptor() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const POperationData& POperationData::default_instance() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

POperationData* POperationData::New(::google::protobuf::Arena* arena) const {
  POperationData* n = new POperationData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void POperationData::Clear() {
// @@protoc_insertion_point(message_clear_start:ZimaProto.OperationData.POperationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_points_.Clear();
  if (GetArenaNoVirtual() == NULL && nav_data_ != NULL) {
    delete nav_data_;
  }
  nav_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_point_ != NULL) {
    delete start_point_;
  }
  start_point_ = NULL;
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_result_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(operation_result_));
  _internal_metadata_.Clear();
}

bool POperationData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZimaProto.OperationData.POperationData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ZimaProto.NavData.PNavData nav_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nav_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ZimaProto.OperationData.PStepPoint step_points = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_step_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ZimaProto.Map.PMapPoint start_point = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ZimaProto.OperationData.POperationType operation_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_type(static_cast< ::ZimaProto::OperationData::POperationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ZimaProto.OperationData.POperationResult operation_result = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_result(static_cast< ::ZimaProto::OperationData::POperationResult >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZimaProto.OperationData.POperationData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZimaProto.OperationData.POperationData)
  return false;
#undef DO_
}

void POperationData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZimaProto.OperationData.POperationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ZimaProto.NavData.PNavData nav_data = 1;
  if (this->has_nav_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->nav_data_, output);
  }

  // double start_time = 2;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->start_time(), output);
  }

  // repeated .ZimaProto.OperationData.PStepPoint step_points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->step_points(static_cast<int>(i)), output);
  }

  // .ZimaProto.Map.PMapPoint start_point = 4;
  if (this->has_start_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->start_point_, output);
  }

  // double duration = 5;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->duration(), output);
  }

  // .ZimaProto.OperationData.POperationType operation_type = 6;
  if (this->operation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->operation_type(), output);
  }

  // .ZimaProto.OperationData.POperationResult operation_result = 7;
  if (this->operation_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->operation_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ZimaProto.OperationData.POperationData)
}

::google::protobuf::uint8* POperationData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ZimaProto.OperationData.POperationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ZimaProto.NavData.PNavData nav_data = 1;
  if (this->has_nav_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->nav_data_, deterministic, target);
  }

  // double start_time = 2;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->start_time(), target);
  }

  // repeated .ZimaProto.OperationData.PStepPoint step_points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->step_points(static_cast<int>(i)), deterministic, target);
  }

  // .ZimaProto.Map.PMapPoint start_point = 4;
  if (this->has_start_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->start_point_, deterministic, target);
  }

  // double duration = 5;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->duration(), target);
  }

  // .ZimaProto.OperationData.POperationType operation_type = 6;
  if (this->operation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->operation_type(), target);
  }

  // .ZimaProto.OperationData.POperationResult operation_result = 7;
  if (this->operation_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->operation_result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZimaProto.OperationData.POperationData)
  return target;
}

size_t POperationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZimaProto.OperationData.POperationData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ZimaProto.OperationData.PStepPoint step_points = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->step_points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->step_points(static_cast<int>(i)));
    }
  }

  // .ZimaProto.NavData.PNavData nav_data = 1;
  if (this->has_nav_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nav_data_);
  }

  // .ZimaProto.Map.PMapPoint start_point = 4;
  if (this->has_start_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_point_);
  }

  // double start_time = 2;
  if (this->start_time() != 0) {
    total_size += 1 + 8;
  }

  // double duration = 5;
  if (this->duration() != 0) {
    total_size += 1 + 8;
  }

  // .ZimaProto.OperationData.POperationType operation_type = 6;
  if (this->operation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_type());
  }

  // .ZimaProto.OperationData.POperationResult operation_result = 7;
  if (this->operation_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POperationData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZimaProto.OperationData.POperationData)
  GOOGLE_DCHECK_NE(&from, this);
  const POperationData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const POperationData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZimaProto.OperationData.POperationData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZimaProto.OperationData.POperationData)
    MergeFrom(*source);
  }
}

void POperationData::MergeFrom(const POperationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZimaProto.OperationData.POperationData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  step_points_.MergeFrom(from.step_points_);
  if (from.has_nav_data()) {
    mutable_nav_data()->::ZimaProto::NavData::PNavData::MergeFrom(from.nav_data());
  }
  if (from.has_start_point()) {
    mutable_start_point()->::ZimaProto::Map::PMapPoint::MergeFrom(from.start_point());
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.operation_type() != 0) {
    set_operation_type(from.operation_type());
  }
  if (from.operation_result() != 0) {
    set_operation_result(from.operation_result());
  }
}

void POperationData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZimaProto.OperationData.POperationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POperationData::CopyFrom(const POperationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZimaProto.OperationData.POperationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POperationData::IsInitialized() const {
  return true;
}

void POperationData::Swap(POperationData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void POperationData::InternalSwap(POperationData* other) {
  using std::swap;
  step_points_.InternalSwap(&other->step_points_);
  swap(nav_data_, other->nav_data_);
  swap(start_point_, other->start_point_);
  swap(start_time_, other->start_time_);
  swap(duration_, other->duration_);
  swap(operation_type_, other->operation_type_);
  swap(operation_result_, other->operation_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata POperationData::GetMetadata() const {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// POperationData

// .ZimaProto.NavData.PNavData nav_data = 1;
bool POperationData::has_nav_data() const {
  return this != internal_default_instance() && nav_data_ != NULL;
}
void POperationData::clear_nav_data() {
  if (GetArenaNoVirtual() == NULL && nav_data_ != NULL) delete nav_data_;
  nav_data_ = NULL;
}
const ::ZimaProto::NavData::PNavData& POperationData::nav_data() const {
  const ::ZimaProto::NavData::PNavData* p = nav_data_;
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.POperationData.nav_data)
  return p != NULL ? *p : *reinterpret_cast<const ::ZimaProto::NavData::PNavData*>(
      &::ZimaProto::NavData::_PNavData_default_instance_);
}
::ZimaProto::NavData::PNavData* POperationData::mutable_nav_data() {
  
  if (nav_data_ == NULL) {
    nav_data_ = new ::ZimaProto::NavData::PNavData;
  }
  // @@protoc_insertion_point(field_mutable:ZimaProto.OperationData.POperationData.nav_data)
  return nav_data_;
}
::ZimaProto::NavData::PNavData* POperationData::release_nav_data() {
  // @@protoc_insertion_point(field_release:ZimaProto.OperationData.POperationData.nav_data)
  
  ::ZimaProto::NavData::PNavData* temp = nav_data_;
  nav_data_ = NULL;
  return temp;
}
void POperationData::set_allocated_nav_data(::ZimaProto::NavData::PNavData* nav_data) {
  delete nav_data_;
  nav_data_ = nav_data;
  if (nav_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ZimaProto.OperationData.POperationData.nav_data)
}

// double start_time = 2;
void POperationData::clear_start_time() {
  start_time_ = 0;
}
double POperationData::start_time() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.POperationData.start_time)
  return start_time_;
}
void POperationData::set_start_time(double value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.POperationData.start_time)
}

// repeated .ZimaProto.OperationData.PStepPoint step_points = 3;
int POperationData::step_points_size() const {
  return step_points_.size();
}
void POperationData::clear_step_points() {
  step_points_.Clear();
}
const ::ZimaProto::OperationData::PStepPoint& POperationData::step_points(int index) const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.POperationData.step_points)
  return step_points_.Get(index);
}
::ZimaProto::OperationData::PStepPoint* POperationData::mutable_step_points(int index) {
  // @@protoc_insertion_point(field_mutable:ZimaProto.OperationData.POperationData.step_points)
  return step_points_.Mutable(index);
}
::ZimaProto::OperationData::PStepPoint* POperationData::add_step_points() {
  // @@protoc_insertion_point(field_add:ZimaProto.OperationData.POperationData.step_points)
  return step_points_.Add();
}
::google::protobuf::RepeatedPtrField< ::ZimaProto::OperationData::PStepPoint >*
POperationData::mutable_step_points() {
  // @@protoc_insertion_point(field_mutable_list:ZimaProto.OperationData.POperationData.step_points)
  return &step_points_;
}
const ::google::protobuf::RepeatedPtrField< ::ZimaProto::OperationData::PStepPoint >&
POperationData::step_points() const {
  // @@protoc_insertion_point(field_list:ZimaProto.OperationData.POperationData.step_points)
  return step_points_;
}

// .ZimaProto.Map.PMapPoint start_point = 4;
bool POperationData::has_start_point() const {
  return this != internal_default_instance() && start_point_ != NULL;
}
void POperationData::clear_start_point() {
  if (GetArenaNoVirtual() == NULL && start_point_ != NULL) delete start_point_;
  start_point_ = NULL;
}
const ::ZimaProto::Map::PMapPoint& POperationData::start_point() const {
  const ::ZimaProto::Map::PMapPoint* p = start_point_;
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.POperationData.start_point)
  return p != NULL ? *p : *reinterpret_cast<const ::ZimaProto::Map::PMapPoint*>(
      &::ZimaProto::Map::_PMapPoint_default_instance_);
}
::ZimaProto::Map::PMapPoint* POperationData::mutable_start_point() {
  
  if (start_point_ == NULL) {
    start_point_ = new ::ZimaProto::Map::PMapPoint;
  }
  // @@protoc_insertion_point(field_mutable:ZimaProto.OperationData.POperationData.start_point)
  return start_point_;
}
::ZimaProto::Map::PMapPoint* POperationData::release_start_point() {
  // @@protoc_insertion_point(field_release:ZimaProto.OperationData.POperationData.start_point)
  
  ::ZimaProto::Map::PMapPoint* temp = start_point_;
  start_point_ = NULL;
  return temp;
}
void POperationData::set_allocated_start_point(::ZimaProto::Map::PMapPoint* start_point) {
  delete start_point_;
  start_point_ = start_point;
  if (start_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ZimaProto.OperationData.POperationData.start_point)
}

// double duration = 5;
void POperationData::clear_duration() {
  duration_ = 0;
}
double POperationData::duration() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.POperationData.duration)
  return duration_;
}
void POperationData::set_duration(double value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.POperationData.duration)
}

// .ZimaProto.OperationData.POperationType operation_type = 6;
void POperationData::clear_operation_type() {
  operation_type_ = 0;
}
::ZimaProto::OperationData::POperationType POperationData::operation_type() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.POperationData.operation_type)
  return static_cast< ::ZimaProto::OperationData::POperationType >(operation_type_);
}
void POperationData::set_operation_type(::ZimaProto::OperationData::POperationType value) {
  
  operation_type_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.POperationData.operation_type)
}

// .ZimaProto.OperationData.POperationResult operation_result = 7;
void POperationData::clear_operation_result() {
  operation_result_ = 0;
}
::ZimaProto::OperationData::POperationResult POperationData::operation_result() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.POperationData.operation_result)
  return static_cast< ::ZimaProto::OperationData::POperationResult >(operation_result_);
}
void POperationData::set_operation_result(::ZimaProto::OperationData::POperationResult value) {
  
  operation_result_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.POperationData.operation_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PCleaningRecordSummary::kStartTimeFieldNumber;
const int PCleaningRecordSummary::kDurationFieldNumber;
const int PCleaningRecordSummary::kAreaSizeFieldNumber;
const int PCleaningRecordSummary::kOperationTypeFieldNumber;
const int PCleaningRecordSummary::kOperationResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PCleaningRecordSummary::PCleaningRecordSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zima_2fproto_2foperation_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZimaProto.OperationData.PCleaningRecordSummary)
}
PCleaningRecordSummary::PCleaningRecordSummary(const PCleaningRecordSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&operation_result_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(operation_result_));
  // @@protoc_insertion_point(copy_constructor:ZimaProto.OperationData.PCleaningRecordSummary)
}

void PCleaningRecordSummary::SharedCtor() {
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_result_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(operation_result_));
  _cached_size_ = 0;
}

PCleaningRecordSummary::~PCleaningRecordSummary() {
  // @@protoc_insertion_point(destructor:ZimaProto.OperationData.PCleaningRecordSummary)
  SharedDtor();
}

void PCleaningRecordSummary::SharedDtor() {
}

void PCleaningRecordSummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PCleaningRecordSummary::descriptor() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PCleaningRecordSummary& PCleaningRecordSummary::default_instance() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

PCleaningRecordSummary* PCleaningRecordSummary::New(::google::protobuf::Arena* arena) const {
  PCleaningRecordSummary* n = new PCleaningRecordSummary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PCleaningRecordSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:ZimaProto.OperationData.PCleaningRecordSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_result_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(operation_result_));
  _internal_metadata_.Clear();
}

bool PCleaningRecordSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZimaProto.OperationData.PCleaningRecordSummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double area_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &area_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ZimaProto.OperationData.POperationType operation_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_type(static_cast< ::ZimaProto::OperationData::POperationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ZimaProto.OperationData.POperationResult operation_result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_result(static_cast< ::ZimaProto::OperationData::POperationResult >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZimaProto.OperationData.PCleaningRecordSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZimaProto.OperationData.PCleaningRecordSummary)
  return false;
#undef DO_
}

void PCleaningRecordSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZimaProto.OperationData.PCleaningRecordSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_time = 1;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_time(), output);
  }

  // uint32 duration = 2;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->duration(), output);
  }

  // double area_size = 3;
  if (this->area_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->area_size(), output);
  }

  // .ZimaProto.OperationData.POperationType operation_type = 4;
  if (this->operation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->operation_type(), output);
  }

  // .ZimaProto.OperationData.POperationResult operation_result = 5;
  if (this->operation_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->operation_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ZimaProto.OperationData.PCleaningRecordSummary)
}

::google::protobuf::uint8* PCleaningRecordSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ZimaProto.OperationData.PCleaningRecordSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_time = 1;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_time(), target);
  }

  // uint32 duration = 2;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->duration(), target);
  }

  // double area_size = 3;
  if (this->area_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->area_size(), target);
  }

  // .ZimaProto.OperationData.POperationType operation_type = 4;
  if (this->operation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->operation_type(), target);
  }

  // .ZimaProto.OperationData.POperationResult operation_result = 5;
  if (this->operation_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->operation_result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZimaProto.OperationData.PCleaningRecordSummary)
  return target;
}

size_t PCleaningRecordSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZimaProto.OperationData.PCleaningRecordSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 start_time = 1;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_time());
  }

  // uint32 duration = 2;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->duration());
  }

  // double area_size = 3;
  if (this->area_size() != 0) {
    total_size += 1 + 8;
  }

  // .ZimaProto.OperationData.POperationType operation_type = 4;
  if (this->operation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_type());
  }

  // .ZimaProto.OperationData.POperationResult operation_result = 5;
  if (this->operation_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PCleaningRecordSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZimaProto.OperationData.PCleaningRecordSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const PCleaningRecordSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PCleaningRecordSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZimaProto.OperationData.PCleaningRecordSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZimaProto.OperationData.PCleaningRecordSummary)
    MergeFrom(*source);
  }
}

void PCleaningRecordSummary::MergeFrom(const PCleaningRecordSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZimaProto.OperationData.PCleaningRecordSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.area_size() != 0) {
    set_area_size(from.area_size());
  }
  if (from.operation_type() != 0) {
    set_operation_type(from.operation_type());
  }
  if (from.operation_result() != 0) {
    set_operation_result(from.operation_result());
  }
}

void PCleaningRecordSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZimaProto.OperationData.PCleaningRecordSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PCleaningRecordSummary::CopyFrom(const PCleaningRecordSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZimaProto.OperationData.PCleaningRecordSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PCleaningRecordSummary::IsInitialized() const {
  return true;
}

void PCleaningRecordSummary::Swap(PCleaningRecordSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PCleaningRecordSummary::InternalSwap(PCleaningRecordSummary* other) {
  using std::swap;
  swap(start_time_, other->start_time_);
  swap(duration_, other->duration_);
  swap(area_size_, other->area_size_);
  swap(operation_type_, other->operation_type_);
  swap(operation_result_, other->operation_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PCleaningRecordSummary::GetMetadata() const {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PCleaningRecordSummary

// uint32 start_time = 1;
void PCleaningRecordSummary::clear_start_time() {
  start_time_ = 0u;
}
::google::protobuf::uint32 PCleaningRecordSummary::start_time() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.PCleaningRecordSummary.start_time)
  return start_time_;
}
void PCleaningRecordSummary::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.PCleaningRecordSummary.start_time)
}

// uint32 duration = 2;
void PCleaningRecordSummary::clear_duration() {
  duration_ = 0u;
}
::google::protobuf::uint32 PCleaningRecordSummary::duration() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.PCleaningRecordSummary.duration)
  return duration_;
}
void PCleaningRecordSummary::set_duration(::google::protobuf::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.PCleaningRecordSummary.duration)
}

// double area_size = 3;
void PCleaningRecordSummary::clear_area_size() {
  area_size_ = 0;
}
double PCleaningRecordSummary::area_size() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.PCleaningRecordSummary.area_size)
  return area_size_;
}
void PCleaningRecordSummary::set_area_size(double value) {
  
  area_size_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.PCleaningRecordSummary.area_size)
}

// .ZimaProto.OperationData.POperationType operation_type = 4;
void PCleaningRecordSummary::clear_operation_type() {
  operation_type_ = 0;
}
::ZimaProto::OperationData::POperationType PCleaningRecordSummary::operation_type() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.PCleaningRecordSummary.operation_type)
  return static_cast< ::ZimaProto::OperationData::POperationType >(operation_type_);
}
void PCleaningRecordSummary::set_operation_type(::ZimaProto::OperationData::POperationType value) {
  
  operation_type_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.PCleaningRecordSummary.operation_type)
}

// .ZimaProto.OperationData.POperationResult operation_result = 5;
void PCleaningRecordSummary::clear_operation_result() {
  operation_result_ = 0;
}
::ZimaProto::OperationData::POperationResult PCleaningRecordSummary::operation_result() const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.PCleaningRecordSummary.operation_result)
  return static_cast< ::ZimaProto::OperationData::POperationResult >(operation_result_);
}
void PCleaningRecordSummary::set_operation_result(::ZimaProto::OperationData::POperationResult value) {
  
  operation_result_ = value;
  // @@protoc_insertion_point(field_set:ZimaProto.OperationData.PCleaningRecordSummary.operation_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PCleaningRecordSummaryList::kRecordSummaryListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PCleaningRecordSummaryList::PCleaningRecordSummaryList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zima_2fproto_2foperation_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZimaProto.OperationData.PCleaningRecordSummaryList)
}
PCleaningRecordSummaryList::PCleaningRecordSummaryList(const PCleaningRecordSummaryList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_summary_list_(from.record_summary_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ZimaProto.OperationData.PCleaningRecordSummaryList)
}

void PCleaningRecordSummaryList::SharedCtor() {
  _cached_size_ = 0;
}

PCleaningRecordSummaryList::~PCleaningRecordSummaryList() {
  // @@protoc_insertion_point(destructor:ZimaProto.OperationData.PCleaningRecordSummaryList)
  SharedDtor();
}

void PCleaningRecordSummaryList::SharedDtor() {
}

void PCleaningRecordSummaryList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PCleaningRecordSummaryList::descriptor() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PCleaningRecordSummaryList& PCleaningRecordSummaryList::default_instance() {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

PCleaningRecordSummaryList* PCleaningRecordSummaryList::New(::google::protobuf::Arena* arena) const {
  PCleaningRecordSummaryList* n = new PCleaningRecordSummaryList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PCleaningRecordSummaryList::Clear() {
// @@protoc_insertion_point(message_clear_start:ZimaProto.OperationData.PCleaningRecordSummaryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_summary_list_.Clear();
  _internal_metadata_.Clear();
}

bool PCleaningRecordSummaryList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZimaProto.OperationData.PCleaningRecordSummaryList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ZimaProto.OperationData.PCleaningRecordSummary record_summary_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_summary_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZimaProto.OperationData.PCleaningRecordSummaryList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZimaProto.OperationData.PCleaningRecordSummaryList)
  return false;
#undef DO_
}

void PCleaningRecordSummaryList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZimaProto.OperationData.PCleaningRecordSummaryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ZimaProto.OperationData.PCleaningRecordSummary record_summary_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_summary_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_summary_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ZimaProto.OperationData.PCleaningRecordSummaryList)
}

::google::protobuf::uint8* PCleaningRecordSummaryList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ZimaProto.OperationData.PCleaningRecordSummaryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ZimaProto.OperationData.PCleaningRecordSummary record_summary_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_summary_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->record_summary_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZimaProto.OperationData.PCleaningRecordSummaryList)
  return target;
}

size_t PCleaningRecordSummaryList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZimaProto.OperationData.PCleaningRecordSummaryList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ZimaProto.OperationData.PCleaningRecordSummary record_summary_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->record_summary_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->record_summary_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PCleaningRecordSummaryList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZimaProto.OperationData.PCleaningRecordSummaryList)
  GOOGLE_DCHECK_NE(&from, this);
  const PCleaningRecordSummaryList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PCleaningRecordSummaryList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZimaProto.OperationData.PCleaningRecordSummaryList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZimaProto.OperationData.PCleaningRecordSummaryList)
    MergeFrom(*source);
  }
}

void PCleaningRecordSummaryList::MergeFrom(const PCleaningRecordSummaryList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZimaProto.OperationData.PCleaningRecordSummaryList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_summary_list_.MergeFrom(from.record_summary_list_);
}

void PCleaningRecordSummaryList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZimaProto.OperationData.PCleaningRecordSummaryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PCleaningRecordSummaryList::CopyFrom(const PCleaningRecordSummaryList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZimaProto.OperationData.PCleaningRecordSummaryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PCleaningRecordSummaryList::IsInitialized() const {
  return true;
}

void PCleaningRecordSummaryList::Swap(PCleaningRecordSummaryList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PCleaningRecordSummaryList::InternalSwap(PCleaningRecordSummaryList* other) {
  using std::swap;
  record_summary_list_.InternalSwap(&other->record_summary_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PCleaningRecordSummaryList::GetMetadata() const {
  protobuf_zima_2fproto_2foperation_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zima_2fproto_2foperation_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PCleaningRecordSummaryList

// repeated .ZimaProto.OperationData.PCleaningRecordSummary record_summary_list = 1;
int PCleaningRecordSummaryList::record_summary_list_size() const {
  return record_summary_list_.size();
}
void PCleaningRecordSummaryList::clear_record_summary_list() {
  record_summary_list_.Clear();
}
const ::ZimaProto::OperationData::PCleaningRecordSummary& PCleaningRecordSummaryList::record_summary_list(int index) const {
  // @@protoc_insertion_point(field_get:ZimaProto.OperationData.PCleaningRecordSummaryList.record_summary_list)
  return record_summary_list_.Get(index);
}
::ZimaProto::OperationData::PCleaningRecordSummary* PCleaningRecordSummaryList::mutable_record_summary_list(int index) {
  // @@protoc_insertion_point(field_mutable:ZimaProto.OperationData.PCleaningRecordSummaryList.record_summary_list)
  return record_summary_list_.Mutable(index);
}
::ZimaProto::OperationData::PCleaningRecordSummary* PCleaningRecordSummaryList::add_record_summary_list() {
  // @@protoc_insertion_point(field_add:ZimaProto.OperationData.PCleaningRecordSummaryList.record_summary_list)
  return record_summary_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::ZimaProto::OperationData::PCleaningRecordSummary >*
PCleaningRecordSummaryList::mutable_record_summary_list() {
  // @@protoc_insertion_point(field_mutable_list:ZimaProto.OperationData.PCleaningRecordSummaryList.record_summary_list)
  return &record_summary_list_;
}
const ::google::protobuf::RepeatedPtrField< ::ZimaProto::OperationData::PCleaningRecordSummary >&
PCleaningRecordSummaryList::record_summary_list() const {
  // @@protoc_insertion_point(field_list:ZimaProto.OperationData.PCleaningRecordSummaryList.record_summary_list)
  return record_summary_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace OperationData
}  // namespace ZimaProto

// @@protoc_insertion_point(global_scope)
